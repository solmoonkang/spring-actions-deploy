spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: ${DATASOURCE_DRIVER_CLASS_NAME}

  security:
    oauth2:
      client:
        registration:
          kakao:
            provider: "kakao"
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope: profile_nickname, profile_image, account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
    hibernate:
      ddl-auto: update

  mail:
    host: ${SPRING_MAIL_HOST}
    port: ${SPRING_MAIL_PORT}
    username: ${SPRING_MAIL_USERNAME}
    password: ${SPRING_MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    auth-code-expiration-millis: ${SPRING_MAIL_AUTH_CODE_EXPIRATION_MILLIS}

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

jwt:
  secret:
    access-key: ${JWT_SECRET_ACCESS_KEY}
  access-expire: ${JWT_ACCESS_EXPIRE}

cloud:
  aws:
    s3:
      bucket: ${CLOUD_AWS_S3_BUCKET}
    credentials:
      access-key: ${CLOUD_AWS_CREDENTIALS_ACCESS_KEY}
      secret-key: ${CLOUD_AWS_CREDENTIALS_SECRET_KEY}
    region:
      static: ${CLOUD_AWS_REGION_STATIC}
      auto: false
    stack:
      auto: false
