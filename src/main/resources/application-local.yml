spring:
  config:
    activate:
      on-profile: local

  security:
    oauth2:
      client:
        registration:
          kakao:
            provider: "kakao"
            client-id: ${kakao.client-id}
            client-secret: ${kakao.client-secret}
            redirect-uri: ${kakao.redirect-uri}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope: profile_nickname, profile_image, account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  h2:
    console:
      enabled: true
      path: /h2-dart

  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:tcp://localhost/~/dart
    username: sa
    password:

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${spring.mail.username}
    password: ${spring.mail.password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    auth-code-expiration-millis: 100000

  data:
    redis:
      host: ${spring.data.redis.host}
      port: ${spring.data.redis.port}

jwt:
  secret:
    access-key: ${jwt.secret.access-key}
  access-expire: ${jwt.access-expire}

cloud:
  aws:
    s3:
      bucket: ${cloud.aws.s3.bucket}
    credentials:
      access-key: ${cloud.aws.credentials.access-key}
      secret-key: ${cloud.aws.credentials.secret-key}
    region:
      static: ${cloud.aws.region.static}
      auto: false
    stack:
      auto: false
